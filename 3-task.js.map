{"version":3,"file":"3-task.js","sources":["../src/js/3-task.js"],"sourcesContent":["// Потрібно створити функціонал для отримання прогнозу погоди в місті.\n// Використай публічне API https://www.weatherapi.com/docs/\n// Використовуй ендпоінт Forecast для того, щоб отримати прогноз погоди на декілька днів.\n\n// Створи форму в яку користувач:\n// 1 вводить назву міста.\n// 2 обирає на яку кількість днів він хоче отримати прогноз погоди (3, 5 та 7 днів).\n// (Іноді параметр не працює в такому випадку можна зробити пошук на 1, 2 та 3 дні)\n// Приклад форми https://prnt.sc/kFmLOj6gBdv-\n\n// Після сабміту форми відмалюй картки з інформацією отриманою з бекенду.\n// Картка має містити відомості про:\n// 1 Зображення з погодою (icon)\n// 2 Текст з погодою (text)\n// 3 Дату (date)\n// 4 Середню температуру в Цельсія (avgtemp_c)\n// Приклад картки https://prnt.sc/h_p-A6Hty-i-\n\nconst BASE_URL = 'http://api.weatherapi.com/v1';\nconst API_KEY = 'edd1b78e40984fc0a09123641241411';\n\nconst form = document.querySelector('.js-search-form');\nconst list = document.querySelector('.js-list');\n\nform.addEventListener('submit', handleSearch);\n\nfunction handleSearch(event) {\n  event.preventDefault();\n\n  const { city, days } = event.currentTarget.elements;\n\n  fetchData(city.value, days.value)\n    .then(data => {\n      console.log('then', data);\n      list.innerHTML = createMarkup(data.forecast.forecastday);\n    })\n    .catch(error => {\n      console.log('catch', error);\n    });\n}\n\nfunction fetchData(city = '', days = 1) {\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: city,\n    days,\n    lang: 'uk',\n  });\n\n  return fetch(`${BASE_URL}/forecast.json?${params}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return response.json();\n  });\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        date,\n        day: {\n          avgtemp_c,\n          condition: { icon, text },\n        },\n      }) => `\n        <li class=\"weather-card\">\n            <img class=\"weather-icon\" src=\"${icon}\" alt=\"${text}\">\n            <h2 class=\"weather-date\">${date}</h2>\n            <h3 class=\"weather-text\">${text}</h3>\n            <h3 class=\"temperature\">${avgtemp_c} °C</h3>\n        </li>\n    `\n    )\n    .join('');\n}\n"],"names":["BASE_URL","API_KEY","form","list","handleSearch","event","city","days","fetchData","data","createMarkup","error","params","response","arr","date","avgtemp_c","icon","text"],"mappings":"4HAkBA,MAAMA,EAAW,+BACXC,EAAU,kCAEVC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAO,SAAS,cAAc,UAAU,EAE9CD,EAAK,iBAAiB,SAAUE,CAAY,EAE5C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EAEpB,KAAM,CAAE,KAAAC,EAAM,KAAAC,CAAI,EAAKF,EAAM,cAAc,SAE3CG,EAAUF,EAAK,MAAOC,EAAK,KAAK,EAC7B,KAAKE,GAAQ,CACZ,QAAQ,IAAI,OAAQA,CAAI,EACxBN,EAAK,UAAYO,EAAaD,EAAK,SAAS,WAAW,CAC7D,CAAK,EACA,MAAME,GAAS,CACd,QAAQ,IAAI,QAASA,CAAK,CAChC,CAAK,CACL,CAEA,SAASH,EAAUF,EAAO,GAAIC,EAAO,EAAG,CACtC,MAAMK,EAAS,IAAI,gBAAgB,CACjC,IAAKX,EACL,EAAGK,EACH,KAAAC,EACA,KAAM,IACV,CAAG,EAED,OAAO,MAAM,GAAGP,CAAQ,kBAAkBY,CAAM,EAAE,EAAE,KAAKC,GAAY,CACnE,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,UAAU,EAGrC,OAAOA,EAAS,MACpB,CAAG,CACH,CAEA,SAASH,EAAaI,EAAK,CACzB,OAAOA,EACJ,IACC,CAAC,CACC,KAAAC,EACA,IAAK,CACH,UAAAC,EACA,UAAW,CAAE,KAAAC,EAAM,KAAAC,CAAM,CAC1B,CACT,IAAY;AAAA;AAAA,6CAEiCD,CAAI,UAAUC,CAAI;AAAA,uCACxBH,CAAI;AAAA,uCACJG,CAAI;AAAA,sCACLF,CAAS;AAAA;AAAA,KAG1C,EACA,KAAK,EAAE,CACZ"}